---
- name: Install nis service and copy conf file
  hosts: all
  become: yes

  vars:
    source_folder: /root/work1/ansible/source_file
    destin_folder: /etc
    destin_debian: /etc/apt
    destin_redhat: /etc/yum.repos.d
    mlnx_repo_Ub20_04: /root/work1/ansible/mlxrepo/20.04 

  tasks:

  - block:   #=== Debian block ===
      - name: Install nis service
        apt: name=nis state=latest
      
      - name: Start nis service and make enable on boot
        service: name=nis state=started enabled=yes
     
      - name: Install autofs service
        apt: name=autofs state=latest
      
      - name: Start autofs service and make enable on boot
        service: name=autofs state=started enabled=yes
    when: ansible_os_family == "Debian"
 

  - block:   #=== RedHat block ===

      - name: Install ypbind service
        yum: name=ypbind state=latest

      - name: Start ypbind service and make enable on boot
        service: name=ypbind state=started enabled=yes

      - name: Install autofs service
        yum: name=autofs state=latest
        
      - name: Start autofs service and make enable on boot
        service: name=autofs state=started enabled=yes
    when: ansible_os_family == "RedHat"


  - name: Copy the conf_file to remote server
    copy: src={{ source_folder }}/{{ item }} dest={{ destin_folder }} mode=0555
    loop:
       - "nsswitch.conf"
       - "yp.conf"
       - "defaultdomain"
       - "90-cloud-init-users"   


  - name: Copy mlxrepo Ub20_04
    copy: src={{ mlnx_repo_Ub20_04 }}/{{ item }} dest={{ destin_debian }}/sources.list mode=0555
    when: ansible_distribution_version == "{{ item }}"


    notify: 
       - Restarting nis service Debian
       - Restarting ypbind service RedHat
       - Restarting autofs service Debian
       - Restarting autofs service RedHat

  handlers:
  - name: Restarting nis service Debian
    service: name=nis state=restarted
    when: ansible_os_family == "Debian"

  - name: Restarting ypbind service RedHat
    service: name=ypbind state=restarted
    when: ansible_os_family == "RedHat"

  - name: Restarting autofs service Debian
    service: name=autofs state=restarted
    when: ansible_os_family == "Debian"

  - name: Restarting autofs service RedHat
    service: name=autofs state=restarted
    when: ansible_os_family == "RedHat"

    
  
