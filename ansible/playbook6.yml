---
- name: Install nis service and copy conf file
  hosts: all
  become: yes

  vars:
    source_folder: /root/work1/ansible/source_file
    destin_folder: /etc
    destin_debian: /etc/apt
    destin_redhat: /etc/yum.repos.d
    mlnx_repo_Ub18_04: /root/work1/ansible/mlxrepo/18.04
    mlnx_repo_Ub20_04: /root/work1/ansible/mlxrepo/20.04
    mlnx_repo_Ub22_04: /root/work1/ansible/mlxrepo/22.04
    mlnx_repo_RH_7_7: /root/work1/ansible/mlxrepo/7.7
    mlnx_repo_RH_7_8: /root/work1/ansible/mlxrepo/7.8
    mlnx_repo_RH_7_9: /root/work1/ansible/mlxrepo/7.9
    mlnx_repo_RH_8_Stream: /root/work1/ansible/mlxrepo/8
    mlnx_repo_RH_8_0: /root/work1/ansible/mlxrepo/8.0
    mlnx_repo_RH_8_1: /root/work1/ansible/mlxrepo/8.1
    mlnx_repo_RH_8_2: /root/work1/ansible/mlxrepo/8.2
    mlnx_repo_RH_8_3: /root/work1/ansible/mlxrepo/8.3
    mlnx_repo_RH_8_4: /root/work1/ansible/mlxrepo/8.4

  tasks:

#  - block:   #=== Debian block ===
#      - name: Install nis service
#        apt: name=nis state=latest
      
#      - name: Start nis service and make enable on boot
#        service: name=nis state=started enabled=yes
     
#      - name: Install autofs service
#        apt: name=autofs state=latest
      
#      - name: Start autofs service and make enable on boot
#        service: name=autofs state=started enabled=yes
#    when: ansible_os_family == "Debian"
 

  - block:   #=== RedHat block ===

      - name: Install ypbind service
        yum: name=ypbind state=latest

      - name: Start ypbind service and make enable on boot
        service: name=ypbind state=started enabled=yes

      - name: Install autofs service
        yum: name=autofs state=latest
        
      - name: Start autofs service and make enable on boot
        service: name=autofs state=started enabled=yes
    when: ansible_os_family == "RedHat"


  - name: Copy the conf_file to remote server
    copy: src={{ source_folder }}/{{ item }} dest={{ destin_folder }} mode=0555
    loop:
       - "nsswitch.conf"
       - "yp.conf"
       - "defaultdomain"
       - "90-cloud-init-users"   


  - name: Copy mlxrepo Ub18_04
    copy: src={{ mlnx_repo_Ub18_04 }}/{{ item }} dest={{ destin_debian }} mode=0555
    loop:
       - "sources.list"
    when: ansible_distribution_version == "18.04"


  - name: Copy mlxrepo Ub20_04
    copy: src={{ mlnx_repo_Ub20_04 }}/{{ item }} dest={{ destin_debian }} mode=0555
    loop:
       - "sources.list"
    when: ansible_distribution_version == "20.04"
 

  - name: Copy mlxrepo Ub22_04
    copy: src={{ mlnx_repo_Ub22_04 }}/{{ item }} dest={{ destin_debian }} mode=0555
    loop:
       - "sources.list"
    when: ansible_distribution_version == "22.04"


  - name: Copy mlxrepo RH_7_7
    copy: src={{ mlnx_repo_RH_7_7 }}/{{ item }} dest={{ destin_redhat }} mode=0555
    loop:
       - "mlnx.repo"
    when: ansible_distribution_version == "7.7"


  - name: Copy mlxrepo RH_7_8
    copy: src={{ mlnx_repo_RH_7_8 }}/{{ item }} dest={{ destin_redhat }} mode=0555
    loop:
       - "mlnx.repo"
    when: ansible_distribution_version == "7.8"


  - name: Copy mlxrepo RH_7_9_
    copy: src={{ mlnx_repo_RH_7_9 }}/{{ item }} dest={{ destin_redhat }} mode=0555
    loop:
       - "mlnx.repo"
    when: ansible_distribution_version == "7.9"


  - name: Copy mlxrepo RH_8_Stream
    copy: src={{ mlnx_repo_RH_8_Stream }}/{{ item }} dest={{ destin_redhat }} mode=0555
    loop:
       - "redhat.repo"
    when: ansible_distribution_version == "8"


  - name: Copy mlxrepo RH_8_4                                                    
    copy: src={{ mlnx_repo_RH_8_4 }}/{{ item }} dest={{ destin_redhat }} mode=0555
    loop:                                                                         
       - "mlnx.repo"                                                              
    when: ansible_distribution_version == "8.4"                                   


    notify: 
#       - Restarting nis service Debian
       - Restarting ypbind service RedHat
       - Restarting autofs service Debian
       - Restarting autofs service RedHat

  handlers:
#  - name: Restarting nis service Debian
#    service: name=nis state=restarted
#    when: ansible_os_family == "Debian"

  - name: Restarting ypbind service RedHat
    service: name=ypbind state=restarted
    when: ansible_os_family == "RedHat"

  - name: Restarting autofs service Debian
    service: name=autofs state=restarted
    when: ansible_os_family == "Debian"

  - name: Restarting autofs service RedHat
    service: name=autofs state=restarted
    when: ansible_os_family == "RedHat"

    
  
